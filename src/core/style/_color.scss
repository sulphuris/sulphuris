@use 'sass:map';
@use 'sass:list';

$colors: generate-color-palettes($colors, $palettes);

:root {
  @include css-variable-generator('color', $colors);
}

@include utility-class-generator((
  prefix: 'text',
  property: 'color',
  values: $colors,
  variable: true
));

.text-transparent {
  color: transparent;
}

.text-color-inherit {
  color: inherit;
}

.text-color-current {
  color: currentColor;
}

@include utility-class-generator((
  prefix: 'bg',
  property: 'background-color',
  values: $colors,
  variable: 'color'
));

@include utility-class-generator((
  prefix: 'border',
  property: 'border-color',
  values: $colors,
  variable: 'color'
));

@if $color-modes and list.length($color-modes) > 0 {
  @each $key, $mode in $color-modes {
    $selector: str-replace($color-modes-selector, 'VALUE', $key);
    $mode-colors: map.get($mode, 'colors');

    @if map.has-key($mode, 'palettes') {
      $mode-palettes: map.get($mode, 'palettes');
      $mode-colors: generate-color-palettes($mode-colors, $mode-palettes);
    }
    
    #{$selector} {
      @include css-variable-generator('color', $mode-colors);
    }
  }
}
