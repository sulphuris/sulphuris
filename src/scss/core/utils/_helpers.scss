@function div($a, $b) {
  @return $a / $b;
}

@function color($color) {
  @return map-get($colors, $color) or $color;
}

@function trim-end($haystack, $needle) {
  @if ends-with($haystack, $needle) {
    @return str-slice($haystack, 1, -(str-length($needle) + 1));
  }
  @return $haystack;
}

@function ends-with($haystack, $needle) {
  @return str-slice($haystack, str-length($haystack) - str-length($needle) + 1) == $needle;
}

@mixin selection($color: primary) {
  ::selection { background: color($color); }
}

/* stylelint-disable */

//TODO: CHECK ðŸ‘‡

@mixin placeholder($color) {
  &::-webkit-input-placeholder,
  &::-moz-placeholder,
  &:-ms-input-placeholder,
  &:-moz-placeholder,
  &::placeholder {
    color: color($color);
  }
}

@mixin bg-image($filename, $ext: png) {
  background-image: url('#{$image_dir}#{$filename}.#{$ext}');
}

@mixin bg-image-retina($filename, $ext: png) {
  @include bg-image($filename, $ext);

  @media only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 1.3 / 1), only screen and (min-resolution: 125dpi), only screen and (min-resolution: 1.3dppx) {
    background-image: url('#{$image_dir}#{$filename}@2x.#{$ext}');
  }
}

@mixin icon($filename, $w, $h, $ext: png) {
  background-image: url('#{$image_dir}#{$filename}.#{$ext}');
  background-size: $w $h;
  background-position: center center;
  background-repeat: no-repeat;
  display: inline-block;
  width: $w;
  height: $h;
  line-height: $h;
  vertical-align: middle;
  margin-top: -3px;
}

@mixin icon-retina($filename, $w, $h, $ext: png) {
  @include icon($filename, $w, $h, $ext);

  @media only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 1.3 / 1), only screen and (min-resolution: 125dpi), only screen and (min-resolution: 1.3dppx) {
    background-image: url('#{$image_dir}#{$filename}@2x.#{$ext}');
  }
}
